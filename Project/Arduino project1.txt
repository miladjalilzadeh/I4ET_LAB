/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/d54249a5-5490-4f13-b210-39f1ee3da8d1 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudAcceleration oneeee;
  CloudTemperatureSensor temp;
  CloudRelativeHumidity humidity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "Wire.h"
#include <MPU6050_light.h>
#include "DHT.h" 
#define DHTTYPE DHT11
#define dht_dpin D8
#define buzzer D7
DHT dht(dht_dpin, DHTTYPE);
MPU6050 mpu(Wire);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  Wire.begin();
  byte status = mpu.begin();
  while(status != 0) { }
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  mpu.calcOffsets();
  dht.begin();
  pinMode( buzzer , OUTPUT);
}

void loop() {
  ArduinoCloud.update();
  mpu.update();
  oneeee = (mpu.getAccZ());
  humidity = dht.readHumidity();
  temp = dht.readTemperature()-12;
  if(3>oneeee&&oneeee>1.5)
{
  analogWrite(buzzer, 255);
  delay(500);
  analogWrite(buzzer, 0);
  delay(500);
}
if(oneeee>3)
{
  analogWrite(buzzer, 255);
  delay(1000);
  analogWrite(buzzer, 0);
  delay(1000);
}
  if(25>temp&&temp>20)
{
  analogWrite(buzzer, 255);
  delay(500);
  analogWrite(buzzer, 0);
  delay(500);
}
if(temp>25)
{
  analogWrite(buzzer, 255);
  delay(1000);
  analogWrite(buzzer, 0);
  delay(1000);
}
  if(humidity>60)
{
  analogWrite(buzzer, 255);
  delay(1000);
  analogWrite(buzzer, 0);
  delay(1000);
}
  if(humidity<40)
{
  analogWrite(buzzer, 255);
  delay(1000);
  analogWrite(buzzer, 0);
  delay(1000);
}

  
}



